syntax = "proto3";

package kurtome.dote.proto.api;

import "api/dotable_list.proto";
import "api/dotable.proto";
import "api/tag.proto";
import "api/follower.proto";
import "api/activity.proto";

message Feed {
  FeedId id = 1;
  repeated FeedItem items = 2;
}

message FeedId {
  oneof id {
    HomeId home = 1;
    ProfileId profile = 2;
    TagListId tag_list = 3;
    FollowerSummaryId follower_summary = 4;
    ProfileDoteListId profile_dote_list = 5;
    TagCollectionId tag_collection = 6;
    ActivityId activity = 7;
    DotableListId dotable_list = 8;
    SecondaryDotableDetailsId secondary_dotable_details = 9;
  }
  message HomeId {}

  message ProfileId {
    string username = 1;
  }

  message TagListId {
    Tag tag = 1;
    Dotable.Kind dotable_kind = 2;
    PaginationInfo pagination_info = 3;
  }

  message TagCollectionId {}

  message ProfileDoteListId {
    string username  = 1;
    Kind list_kind = 2;
    Dotable.Kind dotable_kind = 3;

    enum Kind {
      UNKNOWN_KIND = 0;
      SMILE = 1;
      CRY = 2;
      LAUGH = 3;
      SCOWL = 4;
    }
  }

  message FollowerSummaryId {
    string username = 1;
  }

  message ActivityId {
    PaginationInfo pagination_info = 1;

    // if none of the filters are set, it's assumed to be all activity

    // optional, filter to one person's activity
    string username = 2;

    // optional, filter to one kind
    Dotable.Kind dotable_kind = 3;

    // optional, filter to the current user's following
    bool following_only = 4;
  }

  message DotableListId {}

  message SecondaryDotableDetailsId {
    string dotable_id = 1;
  }
}

message PaginationInfo {
  int32 page_index = 1;
  int32 page_size = 2;
}


message FeedItem {
  // The detailed view of a feed item can itself be a feed.
  FeedId id = 1;
  FeedItemCommon common = 2;

  oneof content {
    FeedDotableList dotable_list = 3;
    FeedFollowerSummary follower_summary = 4;
    FeedTagCollection tag_collection = 5;
    FeedActivityList activity_list = 6;
  }
}

message FeedItemCommon {
  BackgroundColor background_color = 1;

  enum BackgroundColor {
    DEFAULT = 0;
    PRIMARY = 1;
    LIGHT = 2;
  }
}

message FeedDotableList {
  DotableList list = 1;
  Style style = 2;
  ItemStyle item_style = 3;

  enum Style {
    UNKNOWN_STYLE = 0;
    // Used when there are many lists or items beind displayed one after anothjer
    SUMMARY = 1;
    // Used when this list is meant to be the primary display on the page
    PRIMARY = 2;
  }

  enum ItemStyle {
    UNKNOWN_ITEM_STYLE = 0;
    ACTIVITY_ITEM = 1;
  }
}

message FeedFollowerSummary {
  FollowerSummary summary = 1;
  Style style = 2;

  enum Style {
    UNKNOWN_STYLE = 0;
    // Used when there are many lists or items beind displayed one after anothjer
    SUMMARY = 1;
    // Used when this list is meant to be the primary display on the page
    PRIMARY = 2;
  }
}

message FeedTagCollection {
  TagCollection tag_collection = 1;
}

message FeedActivityList {
  ActivityList activity_list = 1;
  Style style = 2;

  enum Style {
    UNKNOWN_STYLE = 0;
    // Used when there are many lists or items beind displayed one after anothjer
    SUMMARY = 1;
    // Used when this list is meant to be the primary display on the page
    PRIMARY = 2;
  }
}
