syntax = "proto3";

package kurtome.dote.proto.api;

import "db/dotable.proto";
import "api/dote.proto";
import "api/tag.proto";

// Base type for all dotables
message Dotable {
  string id = 1;
  db.DotableCommon common = 2;
  Relatives relatives = 3;
  TagCollection tag_collection = 4;
  Kind kind = 5;
  db.DotableDetails details = 6;
  string slug = 7;

  // Dote for the currently logged in person
  api.Dote dote = 8;

  enum Kind {
    UNKNOWN_KIND = 0;
    PODCAST = 1;
    PODCAST_EPISODE = 2;
  }

  message TagCollection {
    repeated Tag tags = 1;
    bool tags_fetched = 2;
  }

  message Relatives {
    Dotable parent = 1;
    bool parent_fetched = 2;
    // Children may not be fetched, for tome types there are too many or in some cases a shallow
    // fetch may be preferred.
    repeated Dotable children = 3;
    bool children_fetched = 4;
  }
}
